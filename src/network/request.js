import axios from 'axios'

// 首先这里面引入了axios网络请求对象，并封装了网络请求axios的实例对象，项目中的所有的网络请求最后都会来到这里，但是由于项目中的网络请求又多又复杂，管理起来麻烦。为了便于管理，对网络请求按照页面进行划分，所以每个页面在中间又搞了一层js文件，该js文件里面封装了本页面所有的网络请求方法，不同的网络请求方法对应本页面内不同的子组件。这样，每个页面的网络请求以页面为单位面向这里（request.js），也就是说所有的网络请求都间接的面向这里（request.js）。这样便于对项目中所有的网络请求进行系统的管理，从此项目中的页面不必单独依赖于第三方的某个插件，以后项目也容易修改。

export function request(config){
  // 1.创建axios的实例
  const instance =axios.create({
    // 服务器的地址
    baseURL: 'http://106.54.54.237:8000/api/mn',
    // 请求时间
    timeout: 5000
  })

  // 2.请求拦截

  // 3.响应拦截

  // 4.发送真正的网络请求
  // 网络请求对象拿到参数config，并拼接在baseURL后面，得到一个详细的数据地址，请求数据，请求到数据后返回一个promise对象
  return instance(config)
}